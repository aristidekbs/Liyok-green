# Generated by Django 5.0.2 on 2025-10-07 13:54

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('subtitle', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.ImageField(upload_to='banners/')),
                ('button_text', models.CharField(blank=True, max_length=100, null=True)),
                ('button_link', models.URLField(blank=True, null=True)),
                ('description', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True, verbose_name='Slug')),
                ('short_description', models.TextField(blank=True, default='Description à compléter', help_text='Courte description pour les aperçus', verbose_name='Description courte')),
                ('description', models.TextField(blank=True, verbose_name='Description complète')),
                ('start_date', models.DateTimeField(verbose_name='Date et heure de début')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Date et heure de fin')),
                ('location', models.CharField(max_length=255, verbose_name='Lieu')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adresse complète')),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True, verbose_name='Nombre maximum de participants')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prix')),
                ('is_free', models.BooleanField(default=True, verbose_name='Gratuit')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('published', 'Publié'), ('cancelled', 'Annulé'), ('completed', 'Terminé')], default='draft', max_length=20, verbose_name='Statut')),
                ('registration_required', models.BooleanField(default=False, verbose_name='Inscription requise')),
                ('registration_deadline', models.DateTimeField(blank=True, null=True, verbose_name="Date limite d'inscription")),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du service')),
                ('slug', models.SlugField(blank=True, max_length=220, unique=True, verbose_name='Slug')),
                ('short_description', models.TextField(verbose_name='Description courte (accueil)')),
                ('description', models.TextField(verbose_name='Description principale (page détaillée)')),
                ('additional_description', models.TextField(blank=True, null=True, verbose_name='Deuxième description (page détaillée)')),
                ('icon', models.CharField(blank=True, help_text="Classe CSS de l'icône (ex: flaticon-gardening)", max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/', verbose_name='Image principale')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Liyok Green', max_length=150)),
                ('logo', models.ImageField(upload_to='logos/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('footer_text', models.TextField(blank=True, null=True)),
                ('email_contact', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_contact', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('role', models.CharField(max_length=100)),
                ('photo', models.ImageField(upload_to='team/')),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('portofolio', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='testimonials/')),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.TextField()),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='managments.category')),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='EventMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Vidéo'), ('youtube', 'YouTube'), ('vimeo', 'Vimeo')], default='image', max_length=10, verbose_name='Type de média')),
                ('image', models.ImageField(blank=True, null=True, upload_to='events/media/%Y/%m/', verbose_name='Image')),
                ('video', models.FileField(blank=True, null=True, upload_to='events/videos/%Y/%m/', verbose_name='Vidéo')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='URL de la vidéo (YouTube/Vimeo)')),
                ('caption', models.CharField(blank=True, max_length=255, null=True, verbose_name='Légende')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Mise en avant')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='managments.event')),
            ],
            options={
                'verbose_name': "Média d'événement",
                'verbose_name_plural': "Médias d'événements",
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Galerie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, verbose_name='Titre de la galerie')),
                ('slug', models.SlugField(blank=True, max_length=220, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('est_publie', models.BooleanField(default=True, verbose_name='Publié')),
                ('type_galerie', models.CharField(choices=[('photo', 'Photo'), ('video', 'Vidéo'), ('mixte', 'Mixte')], default='photo', max_length=10, verbose_name='Type de galerie')),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='galeries', to='managments.category', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Galerie',
                'verbose_name_plural': 'Galeries',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ImageGalerie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='galeries/images/', verbose_name='Image')),
                ('legende', models.CharField(blank=True, max_length=255, null=True, verbose_name='Légende')),
                ('date_ajout', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('est_principale', models.BooleanField(default=False, verbose_name='Image principale')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('galerie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='managments.galerie', verbose_name='Galerie associée')),
            ],
            options={
                'verbose_name': 'Image de galerie',
                'verbose_name_plural': 'Images de galerie',
                'ordering': ['ordre', 'date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='MediaArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='articles/')),
                ('video', models.FileField(blank=True, null=True, upload_to='articles/')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='managments.article')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='events/')),
                ('video', models.FileField(blank=True, null=True, upload_to='events/')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='managments.project')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='services/media/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=255, null=True, verbose_name='Légende')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='managments.service')),
            ],
            options={
                'verbose_name': 'Média de service',
                'verbose_name_plural': 'Médias de services',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Adresse email')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('company', models.CharField(blank=True, max_length=200, null=True, verbose_name='Entreprise')),
                ('position', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poste')),
                ('number_of_people', models.PositiveIntegerField(default=1, verbose_name='Nombre de personnes')),
                ('special_requirements', models.TextField(blank=True, null=True, verbose_name='Besoins spécifiques')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmé'), ('cancelled', 'Annulé'), ('waiting', "Liste d'attente")], default='pending', max_length=20, verbose_name='Statut')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('confirmation_sent', models.BooleanField(default=False, verbose_name='Email de confirmation envoyé')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes internes')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='managments.event', verbose_name='Événement')),
            ],
            options={
                'verbose_name': 'Inscription à un événement',
                'verbose_name_plural': 'Inscriptions aux événements',
                'ordering': ['-registration_date'],
                'unique_together': {('event', 'email')},
            },
        ),
    ]
